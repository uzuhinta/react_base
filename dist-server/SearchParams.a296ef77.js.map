{"version":3,"sources":["../src/useBreedList.js","../src/Pet.js","../src/Results.js","../src/SearchParams.js"],"names":["localCache","useBreedList","animal","breedList","setBreedList","status","setStatus","requestBreedList","res","fetch","json","breeds","Pet","name","breed","images","location","id","hero","length","Results","pets","map","pet","city","state","SearchParams","ANIMALS","setLocation","setAnimal","setBreed","setPets","theme","setTheme","ThemeContext","requestPets","console","log","e","preventDefault","target","value","backgroundColor"],"mappings":"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","file":"SearchParams.a296ef77.js","sourceRoot":"..\\server","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst localCache = {};\r\n\r\nexport default function useBreedList(animal) {\r\n  const [breedList, setBreedList] = useState([]);\r\n  const [status, setStatus] = useState(\"unloaded\");\r\n\r\n  useEffect(() => {\r\n    if (!animal) {\r\n      setBreedList([]);\r\n    } else if (localCache[animal]) {\r\n      setBreedList[localCache[animal]];\r\n    } else {\r\n      requestBreedList();\r\n    }\r\n    async function requestBreedList() {\r\n      setBreedList([]);\r\n      setStatus(\"loading\");\r\n      const res = await fetch(\r\n        `http://pets-v2.dev-apis.com/breeds?animal=${animal}`\r\n      );\r\n\r\n      const json = await res.json();\r\n      localCache[animal] = json.breeds || [];\r\n      setBreedList(localCache[animal]);\r\n      setStatus(\"loaded\");\r\n    }\r\n  }, [animal]);\r\n  return [breedList, status];\r\n}\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Pet = ({ name, animal, breed, images, location, id }) => {\r\n  let hero = \"http://pets-v2.dev-apis.com/pets/none.jpg\";\r\n  if (images.length) {\r\n    hero = images[0];\r\n  }\r\n  return (\r\n    <Link to={`/details/${id}`} className=\"pet\">\r\n      <div className=\"image-container\">\r\n        <img src={hero} alt={animal} />\r\n      </div>\r\n      <div className=\"info\">\r\n        <h1>{name}</h1>\r\n        <h2>{`${animal} - ${breed} - ${location}`}</h2>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\nexport default Pet;\r\n","import Pet from \"./Pet\";\r\n\r\nconst Results = ({ pets }) => {\r\n  return (\r\n    <div className=\"search\">\r\n      {!pets.length ? (\r\n        <h2>No pet found</h2>\r\n      ) : (\r\n        pets.map((pet) => (\r\n          <Pet\r\n            animal={pet.animal}\r\n            key={pet.id}\r\n            name={pet.name}\r\n            breed={pet.breed}\r\n            images={pet.images}\r\n            location={`${pet.city} , ${pet.state}`}\r\n            id={pet.id}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport useBreedList from \"./useBreedList\";\r\nimport Results from \"./Results\";\r\nimport ThemeContext from \"./ThemeContext\";\r\n\r\nconst ANIMALS = [\"bird\", \"cat\", \"dog\", \"rabbit\", \"reptile\"];\r\n\r\nconst SearchParams = () => {\r\n  const [location, setLocation] = useState(\"\");\r\n  const [animal, setAnimal] = useState(\"\");\r\n  const [breed, setBreed] = useState(\"\");\r\n  const [pets, setPets] = useState([]);\r\n  const [breeds] = useBreedList(animal);\r\n  const [theme, setTheme] = useContext(ThemeContext);\r\n  useEffect(() => {\r\n    requestPets();\r\n  }, []);\r\n\r\n  async function requestPets() {\r\n    const res = await fetch(\r\n      `http://pets-v2.dev-apis.com/pets?animal=${animal}&location=${location}&breed=${breed}`\r\n    );\r\n\r\n    const json = await res.json();\r\n    console.log(json);\r\n    setPets(json.pets);\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-params\">\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          requestPets();\r\n        }}\r\n      >\r\n        <label htmlFor=\"location\">\r\n          Location\r\n          <input\r\n            id=\"location\"\r\n            onChange={(e) => setLocation(e.target.value)}\r\n            value={location}\r\n            placeholder=\"Location\"\r\n          />\r\n        </label>\r\n        <label htmlFor=\"animal\">\r\n          Animal\r\n          <select\r\n            id=\"animal\"\r\n            value={animal}\r\n            onChange={(e) => setAnimal(e.target.value)}\r\n            onBlur={(e) => setAnimal(e.target.value)}\r\n          >\r\n            <option></option>\r\n            {ANIMALS.map((animal) => (\r\n              <option value={animal} key={animal}>\r\n                {animal}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <label htmlFor=\"breed\">\r\n          Breed\r\n          <select\r\n            id=\"breed\"\r\n            value={breed}\r\n            onChange={(e) => setBreed(e.target.value)}\r\n            onBlur={(e) => setBreed(e.target.value)}\r\n          >\r\n            <option></option>\r\n            {breeds.map((breed) => (\r\n              <option value={breed} key={breed}>\r\n                {breed}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <button style={{ backgroundColor: theme }}>Submit</button>\r\n      </form>\r\n      <Results pets={pets} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchParams;\r\n"]}